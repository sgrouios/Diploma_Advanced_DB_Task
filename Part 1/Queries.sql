/*--Create database
CREATE DATABASE Diploma_DB_Task

--Switch to database and run script
USE Diploma_DB_Task;
GO

--- DROP ---
DROP DATABASE Diploma_DB_Task;

--Show all tables from current database
SELECT * FROM [Sys].TABLES;*/

-- Select rows from table
--SELECT * FROM LOCATION9802;

-- Delete row
--DELETE FROM LOCATION9802 WHERE LOCATIONID='ACC1021';

-- Run stored procedure
/*EXEC ADD_LOCATION @PLOCID = 'ACC1021', @PLOCNAME = 'Craigieburn', 
@PLOCADDRESS = 'Champion Pde', @PMANAGER = 'John';*/

-- Delete Procedure
-- DROP PROCEDURE IF EXISTS dbo.ADD_LOCATION;

-- Create Procedure
/*CREATE PROCEDURE ADD_LOCATION @PLOCID NVARCHAR(10), 
@PLOCNAME NVARCHAR(50), 
@PLOCADDRESS NVARCHAR(200), 
@PMANAGER NVARCHAR(100) AS
BEGIN

INSERT INTO LOCATION9802 VALUES(@PLOCID, @PLOCNAME, @PLOCADDRESS, @PMANAGER);

END;*/

-- Run ADD_LOCATION stored procedure
EXEC ADD_LOCATION @PLOCID = 'ACC1021', @PLOCNAME = 'Thomo', 
@PLOCADDRESS = 'Champion Pde', @PMANAGER = 'Steve';

GO
DECLARE @LOCID NVARCHAR(10);
EXEC ADD_LOCATION 'ACC1021','Thomo', 'Champion Pde','Steve', @LOCID OUTPUT;
SELECT @LOCID;

DELETE FROM INVENTORY9802 WHERE LOCATIONID = 'ACC1021';
DELETE FROM LOCATION9802 WHERE LOCATIONID='ACC1021';

INSERT INTO INVENTORY9802 VALUES(10002, 'MLB3931', 50);

GO
CREATE PROCEDURE DISPLAY
AS
BEGIN
    SELECT * FROM LOCATION9802;
    SELECT * FROM INVENTORY9802;
    SELECT * FROM PRODUCT9802;  
END

-- Run GET_LOCATION_BY_ID and RETURN Location
GO
DECLARE @LOCATION NVARCHAR(100);
EXEC GET_LOCATION_BY_ID 'MLB3931', @LOCATION OUTPUT;
SELECT @LOCATION;

GO

GO
DECLARE @PRODID INT;
EXEC @PRODID = ADD_PRODUCT 'New Product', 100, 500;
SELECT @PRODID;

GO
DECLARE @LOCID NVARCHAR(MAX);
EXEC ADD_LOCATION 'ACC1021', 'Thomo', 
'Champion Pde','Steve', @LOCID OUTPUT;

EXEC DISPLAY;

DELETE FROM PURCHASEORDER9802 WHERE PRODUCTID > 10001;
DELETE FROM INVENTORY9802 WHERE PRODUCTID > 10001;
DELETE FROM PRODUCT9802 WHERE PRODUCTID > 10001;

--- RESET AUTO-INCREMENT
DBCC CHECKIDENT(PRODUCT9802, RESEED, 10001)

GO


EXEC PURCHASE_STOCK @PPRODID = 10001, @PLOCID = 'MLB391', @PQTY = 700;

EXEC DISPLAY;

UPDATE GENERALLEDGER9802 SET AMOUNT = 60000 WHERE ITEMID = 1
SELECT * FROM PURCHASEORDER9802;
SELECT * FROM GENERALLEDGER9802;
SELECT * FROM PRODUCT9802;

GO


DECLARE @ACCOUNTID INT;
EXEC @ACCOUNTID = ADD_CLIENT_ACCOUNT 'Hello World3', 20000, 60000;
SELECT @ACCOUNTID;

DELETE FROM CLIENTACCOUNT9802 WHERE ACCOUNTID > 30001;
DBCC CHECKIDENT(CLIENTACCOUNT9802, RESEED, 30001)

SELECT * FROM CLIENTACCOUNT9802;
go

EXEC PURCHASE_STOCK
EXEC DISPLAY;
SELECT * FROM PURCHASEORDER9802;
SELECT * FROM GENERALLEDGER9802;
SELECT * FROM PRODUCT9802;
SELECT * FROM AUTHORISEDPERSON9802
SELECT * FROM ACCOUNTPAYMENT9802

EXEC PURCHASE_STOCK 10004, 'ACC1021', 20


DECLARE @ACCTNO INT;
EXEC @ACCTNO = ADD_AUTHORISED_PERSON 'Stephen', 'Grouios', 'the@hotmail.com', 'password', 30001
SELECT @ACCTNO;

GO
DELETE FROM AUTHORISEDPERSON9802 WHERE ACCOUNTID > 50001

SELECT MAX(PRODUCTID) FROM PRODUCT9802


GO
---------------------------------------
GO

DECLARE @LOCID NVARCHAR(8);
DECLARE @LOCNAME NVARCHAR(50);
DECLARE @ADDRESS NVARCHAR(100);
DECLARE @MANAGER NVARCHAR(100);

DECLARE @MY_CURSOR CURSOR;
EXEC GET_LOCATION_BY_ID @PLOCID = ACC1021, @LOCATION = @MY_CURSOR OUTPUT;
FETCH NEXT FROM @MY_CURSOR
INTO @LOCID, @LOCNAME, @ADDRESS, @MANAGER;

SELECT @LOCID, @LOCNAME, @ADDRESS, @MANAGER;
SELECT * FROM LOCATION9802
------------------------------------
DECLARE @PRODUCTID INT;
DECLARE @PRODNAME NVARCHAR(100);
DECLARE @BUYPRICE MONEY;
DECLARE @SELLPRICE MONEY;
DECLARE @MY_CURSOR CURSOR;

EXEC GET_PRODUCT_BY_ID @PPRODID = 10004, @PRODUCT = @MY_CURSOR OUTPUT;
FETCH NEXT FROM @MY_CURSOR
INTO @PRODUCTID, @PRODNAME, @BUYPRICE, @SELLPRICE;

BEGIN
    PRINT 'Product ID: ' + CAST(@PRODUCTID AS NVARCHAR)
    + N'Product name: ' + @PRODNAME + N'Buy price: $' + 
    CAST(@BUYPRICE AS NVARCHAR) +
    N'Sell price: $' + CAST(@SELLPRICE AS NVARCHAR)
END

CLOSE @MY_CURSOR;
DEALLOCATE @MY_CURSOR;

SELECT * FROM PRODUCT9802
    
SELECT * FROM CLIENTACCOUNT9802
DELETE FROM CLIENTACCOUNT9802 WHERE ACCOUNTID = 30002
DBCC CHECKIDENT(CLIENTACCOUNT9802, RESEED, 30001)

EXEC ADD_CLIENT_ACCOUNT 'NewAccount', 10000, 200000

USE Diploma_DB_Task
SELECT * FROM ACCOUNTPAYMENT9802 WHERE ACCOUNTID = 30001
SELECT * FROM CLIENTACCOUNT9802 WHERE ACCOUNTID = 30001
SELECT * FROM GENERALLEDGER9802
GO


SELECT * FROM ACCOUNTPAYMENT9802
SELECT * FROM CLIENTACCOUNT9802
SELECT * FROM GENERALLEDGER9802
EXEC MAKE_ACCOUNT_PAYMENT @PACCOUNTID = 3000, @PAMOUNT = 50
SELECT * FROM ACCOUNTPAYMENT9802
SELECT * FROM CLIENTACCOUNT9802
SELECT * FROM GENERALLEDGER9802

DELETE FROM ACCOUNTPAYMENT9802 WHERE 
ACCOUNTID = 30001 AND 
DATETIMERECEIVED = '2020-05-13 16:55:47.567'
GO


GO
DECLARE @MYCURSOR CURSOR;
DECLARE @ACCTID INT;
DECLARE @ACCTNAME NVARCHAR(MAX);
DECLARE @BALANCE MONEY;
DECLARE @CREDIT MONEY;
DECLARE @USERID INT;
DECLARE @FIRSTNAME NVARCHAR(100);
DECLARE @SURNAME NVARCHAR(100);
DECLARE @EMAIL NVARCHAR(100);
EXEC GET_CLIENT_ACCOUNT_BY_ID 30001;
FETCH NEXT FROM @MYCURSOR INTO
@ACCTID, @ACCTNAME, @BALANCE, @CREDIT, @USERID, 
@FIRSTNAME, @SURNAME,@EMAIL
SELECT @ACCTID, @ACCTNAME, @BALANCE, @CREDIT, @USERID, 
@FIRSTNAME, @SURNAME,@EMAIL


SELECT * FROM CLIENTACCOUNT9802
SELECT * FROM AUTHORISEDPERSON9802


GO

DECLARE @NUM INT;
EXEC @NUM = CREATE_ORDER @PSHIPPINGADDRESS = 'Whatever', @PUSERID = 50001;
SELECT @NUM;
SELECT * FROM ORDER9802
DELETE FROM ORDER9802 WHERE ORDERID > 70001;
SELECT * FROM AUTHORISEDPERSON9802
DBCC CHECKIDENT(ORDER9802, RESEED, 70001)

GO


DECLARE @MYCURSOR CURSOR;
EXEC GET_ORDER_BY_ID 70001, @MYCURSOR OUTPUT;


SELECT * FROM ORDER9802
SELECT * FROM ORDERLINE9802
SELECT * FROM PRODUCT9802

DELETE FROM ORDERLINE9802 WHERE PRODUCTID > 10001
GO


EXEC ADD_PRODUCT_TO_ORDER 70002, 10002, 2, 5;
EXEC ADD_PRODUCT_TO_ORDER 70002, 10002, 2, 0;
DECLARE @PRODID INT;
EXEC @PRODID = ADD_PRODUCT 'Samsung Galaxy', 100, 500;
EXEC CREATE_ORDER '13 Banksia Avenue', 50001

SELECT * FROM ORDER9802
SELECT * FROM ORDERLINE9802
EXEC ADD_PRODUCT_TO_ORDER 70002, 10002, 2, 0;
SELECT * FROM ORDER9802
SELECT * FROM ORDERLINE9802

IF NOT EXISTS (SELECT ORDERID FROM ORDER9802 WHERE ORDERID = 7001)
    PRINT 'DOES NOT EXIST'
ELSE
    PRINT 'EXIST'

UPDATE ORDER9802 SET TOTAL += 1000 WHERE ORDERID = 70002
GO

GO

DECLARE @PRODID INT;
EXEC @PRODID = ADD_PRODUCT 'LG', 100, 500;

SELECT * FROM ORDER9802
SELECT * FROM ORDERLINE9802
EXEC ADD_PRODUCT_TO_ORDER 70002, 10001, 2, 0
SELECT * FROM ORDER9802
SELECT * FROM ORDERLINE9802

EXEC REMOVE_PRODUCT_FROM_ORDER 70002, 10002

DECLARE @SUBTOTAL MONEY = (SELECT SUBTOTAL FROM 
ORDERLINE9802 WHERE ORDERID = 70001 AND PRODUCTID = 10001);
SELECT @SUBTOTAL

GO
DECLARE @ORDERS CURSOR;
DECLARE @ORDERID INT;
DECLARE @SHIPPING NVARCHAR(MAX);
DECLARE @DATECREATED DATETIME;
DECLARE @DATEDISPATCHED DATETIME;
DECLARE @TOTAL MONEY;
DECLARE @USERID INT;
EXEC GET_OPEN_ORDERS @ORDERS OUTPUT;


FETCH NEXT FROM @ORDERS INTO 
@ORDERID, @SHIPPING, @DATECREATED, @DATEDISPATCHED,
@TOTAL, @USERID;

SELECT @ORDERID, @SHIPPING, @DATECREATED, @DATEDISPATCHED,
@TOTAL, @USERID;

SELECT * FROM ORDER9802 WHERE DATETIMEDISPATCHED IS NULL 

select DATETIMEDISPATCHED FROM ORDER9802 WHERE ORDERID = 70002


GO
USE Diploma_DB_Task
SELECT * FROM INVENTORY9802 WHERE PRODUCTID = 10001
SELECT * FROM ORDER9802 WHERE ORDERID = 70002
SELECT * FROM CLIENTACCOUNT9802 WHERE ACCOUNTID = 30001
SELECT * FROM GENERALLEDGER9802
EXEC FULLFILL_ORDER 70002
SELECT * FROM INVENTORY9802
SELECT * FROM ORDER9802
SELECT * FROM CLIENTACCOUNT9802
select * from PURCHASEORDER9802
use Diploma_DB_Task
SELECT * FROM LOCATION9802

SELECT * FROM PURCHASEORDER9802
SELECT * FROM INVENTORY9802
SELECT * FROM PRODUCT9802

SELECT * FROM AUTHORISEDPERSON9802

SELECT * FROM ACCOUNTPAYMENT9802
SELECT * FROM CLIENTACCOUNT9802

/*ADD_PRODUCT_TO_ORDER WHERE IT HAS NOT BEEN DISPATCHED*/
USE Diploma_DB_Task
SELECT * FROM ORDER9802 WHERE ORDERID = 70005
SELECT * FROM ORDERLINE9802 WHERE ORDERID = 70005
SELECT * FROM PRODUCT9802 WHERE PRODUCTID = 10001
GO
EXEC ADD_PRODUCT_TO_ORDER @PORDERID = 70005, 
@PPRODIID = 10001, @PQTY = 1, @DISCOUNT = 0

DELETE FROM ORDERLINE9802 WHERE ORDERID = 70005
UPDATE ORDER9802 SET TOTAL = 0 WHERE ORDERID = 70005

DECLARE @SUBTOTAL MONEY = (1 * 1295) * (1 - 0.5);
SELECT @SUBTOTAL;

SELECT SELLPRICE FROM PRODUCT9802 
WHERE PRODUCTID = 10001

DECLARE @TEST DECIMAL (3,2) = 0.25;
SELECT @TEST;

SELECT * FROM INVENTORY9802 WHERE LOCATIONID = 'NEWLOC';
SELECT * FROM LOCATION9802
SELECT * FROM PRODUCT9802
SELECT * FROM INVENTORY9802 WHERE PRODUCTID = 10008

SELECT * FROM PURCHASEORDER9802 WHERE PRODUCTID = 10002 AND LOCATIONID = 'ABC123'
SELECT * FROM INVENTORY9802 WHERE PRODUCTID = 10002 AND LOCATIONID = 'ABC123'
SELECT * FROM GENERALLEDGER9802

select * FROM CLIENTACCOUNT9802
SELECT * FROM AUTHORISEDPERSON9802

SELECT CLIENTACCOUNT9802.ACCOUNTID, ACCTNAME, 
BALANCE, CREDITLIMIT, USERID, FIRSTNAME, SURNAME, EMAIL
FROM CLIENTACCOUNT9802 INNER JOIN AUTHORISEDPERSON9802
ON CLIENTACCOUNT9802.ACCOUNTID = AUTHORISEDPERSON9802.ACCOUNTID
WHERE CLIENTACCOUNT9802.ACCOUNTID = 30001

SELECT CLIENTACCOUNT9802.ACCOUNTID, ACCTNAME, 
BALANCE, CREDITLIMIT, NULL AS USERID,  NULL AS FIRSTNAME,
NULL AS SURNAME, NULL AS EMAIL FROM CLIENTACCOUNT9802 WHERE 
ACCOUNTID = 30001;

SELECT * FROM ACCOUNTPAYMENT9802 WHERE ACCOUNTID = 30001
SELECT * FROM CLIENTACCOUNT9802  WHERE ACCOUNTID = 30001
SELECT * FROM GENERALLEDGER9802

USE Diploma_DB_Task
SELECT * FROM ORDER9802 WHERE ORDERID = 70005
SELECT * FROM ORDERLINE9802 WHERE ORDERID = 70005
SELECT * FROM INVENTORY9802 WHERE PRODUCTID = 10001 AND LOCATIONID = 'MLB3931'
SELECT * FROM CLIENTACCOUNT9802 WHERE ACCOUNTID = 30001
SELECT * FROM AUTHORISEDPERSON9802 WHERE ACCOUNTID = 30001
SELECT * FROM GENERALLEDGER9802

SELECT * FROM ORDER9802 WHERE ORDERID = 70006
SELECT * FROM ORDERLINE9802 WHERE ORDERID = 70006

USE Diploma_DB_Task
GO

SELECT * FROM ACCOUNTPAYMENT9802
SELECT * FROM AUTHORISEDPERSON9802
SELECT * FROM CLIENTACCOUNT9802
SELECT * FROM GENERALLEDGER9802
SELECT * FROM INVENTORY9802
SELECT * FROM LOCATION9802
SELECT * FROM ORDER9802
SELECT * FROM ORDERLINE9802
SELECT * FROM PRODUCT9802
SELECT * FROM PURCHASEORDER9802




